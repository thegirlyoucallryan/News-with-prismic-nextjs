import Head from 'next/head';
import Layout from '../components/Layout';
import Prismic from 'prismic-javascript';
import { Client } from '../prismic-config';
import { RichText } from 'prismic-reactjs';
import Link from 'next/link';



export default function Home({articles, trending}) {

  return (
    <div >
      
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

     
      <Layout>
       <div>
        <h1 className='text-3xl text-slate-400 uppercase font-semibold my-11 ml-5'> Stay Informed </h1>

          <div className='flex'>
          <div className="flex  flex-col w-2/3 ml-24 ">
           
            {articles.results.map( (article, index) => (
             
              <div key={article.uid}>
               
                 <Link href={`article/${article.uid}`}>
                  
              <img className='w-2/3 ml-9 cursor-pointer shadow-s,' src={article.data.image.url} alt={article.data.title} />
              </Link>
              <Link href={`article/${article.data.id}`}>
                <h1 className='ml-5 mt-5 text-blue-700 text-xl cursor-pointer px-5   pb-1 hover:text-slate-400 capitalize w-2/3'>{RichText.render(article.data.title)}</h1>
                
              </Link>
              <div className='text-slate-500 w-2/3  mb-11 text-sm ml-10'>{article.data.textbox.map((textbox) => textbox.text.slice(0, 30))}
             
              
              </div>
        
              </div>
            ))}

</div>
        
          <div className='flex  flex-col w-1/3 mr-9  '>
          <h1 className='text-2xl text-slate-400 uppercase font-semibold my-11 ml-4'> See Whats Trending </h1>
            {trending.results.map((trending, index) => (
              <div key={trending.uid}>
            
                <Link href={`trending/${trending.uid}`}>
                  <h1 className='bold text-xl text-zinc-600 cursor-pointer'>{RichText.render(trending.data.title)}</h1>
                </Link>
                <hr className='mt-5'/>
                </div>
            ))}

          
       
            </div>
            
              </div>
       </div>
        </Layout>
    </div>
  )
}

//called with every request/refresh
export async function getServerSideProps() {
  const articles = await Client().query(
    Prismic.Predicates.at("document.type", "article")
  );

  const trending = await Client().query(
    Prismic.Predicates.at("document.type", "trending")
  );
 

  return{
    props: {
      articles: articles,
      trending: trending
    }
  }

}